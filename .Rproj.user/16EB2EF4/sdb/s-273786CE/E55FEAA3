{
    "collab_server" : "",
    "contents" : "#============================================================================\n# script1.R\n#\n#============================================================================\n\n# If you are using libraries, put them at the top\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(readxl)\n\n# Read in a csv file\ntest_df <- read.csv(\"y19-vistaverde-counts-expt1.csv\")\n#    Look at first few and last few lines\nhead(test_df,3)\ntail(test_df,3)\n\n# Read in an Excel file\ntest_df2 <- read_excel(\"y19-vistaverde-counts-expt1.xlsx\")\ntest_df2 # gives tibble rather than plain data frame\n\n# Make datetime into date\ntest_df2$StartDate <- as.Date(test_df2$StartDate)\ntest_df2$EndDate <- as.Date(test_df2$EndDate)\ntest_df2\n\ndata.frame()\n\n### Reviewing data import\n\n### 1. The wrong way\n\n## Clicking on the file name gets it to import using\n## 'readxl':\n# > library(readxl)\n# > y19_trapview_beede_1_download <- read_excel(\"y19-trapview-beede-1-download.xls\")\n# New names:\n# * `` -> ...2\n# * `` -> ...3\n# * `` -> ...4\n# * `` -> ...5\n\n## Problem--bad defaults, bad file name, and bad datafrom\nhead(y19_trapview_beede_1_download)\n# A tibble: 6 x 5\n# `Number of pest in period`     ...2      ...3             ...4          ...5 \n# <chr>                          <chr>     <chr>            <chr>         <chr>\n# 1 From date: 04.26.2019 00:00:00 NA        NA               NA            NA   \n# 2 To date: 05.16.2019 16:33:49   NA        NA               NA            NA   \n# 3 NA                             NA        NA               NA            NA   \n# 4 Date                           Pests no. Pests difference User reviewed Event\n# 5 NA                             NA        NA               NA            NA   \n# 6 04.26.2019 13:56:00            7         7                Yes           NA \n\n### Variable names (after \"tibble\" are horrible). What is really needed is to\n### export starting with line 4, but those are bad variable names also \n\n### 2. The easiest right way--excise, save as csv, and use read.csv()\n###    Changed names manually, but consistency will be important. Better done in\n###    script. Saved as beede.csv\nbeede <- as_tibble(read.csv(\"beede.csv\", stringsAsFactors = FALSE)) \n# tibble from tidyverse makes some things easier. Better not to assign factors yet\nhead(beede)\n# A tibble: 6 x 5\n#   date_time           nmbr_pests change_pests user_rvwd event                                    \n#   <chr>                    <int>        <int> <chr>     <chr>                                    \n# 1 04.26.2019 13:56:00          7            7 Yes       lorem ipsum impressive latin space filler\n# 2 04.26.2019 14:56:00          7            0 Yes       \"\"                                       \n# 3 04.26.2019 15:57:00          7            0 Yes       \"\"                                       \n# 4 04.26.2019 16:56:00          7            0 Yes       \"\"                                       \n# 5 04.26.2019 17:57:00          7            0 Yes       \"\"                                       \n# 6 04.26.2019 18:57:00          7            0 Yes       \"\"       \n\n# Figure out function to tell lubricate format\n# beede$date_time <- as_datetime(beede$date_time)\n\n### 3. Use readxl() with approriate options\n\n### Can chose first line, probably can rename variables. We can \n### learn/refresh fri pm, or we can make a note to RTFM\n\n\n",
    "created" : 1565116300822.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "338803675",
    "id" : "E55FEAA3",
    "lastKnownWriteTime" : 1565114867,
    "last_content_update" : 1565114867,
    "path" : "C:/Users/Foster.Hengst/my_git/my_hello_world/script1.R",
    "project_path" : "script1.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}